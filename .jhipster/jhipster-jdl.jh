entity Region {
	regionName String required
}

entity Color {
	colorName String required
}

entity Wine {
	name String required,
	appellation String,
	producer String required,
	creatorId Long
}

entity Vintage {
	year Integer required,
	childYear Integer,
	apogeeYear Integer,
	bareCode Integer
}

entity WineInCellar {
	childYear Integer,
	apogeeYear Integer,
	price Double,
    quantity Integer required,
    comments String,
    location String
}

entity Cellar {
	capacity Integer,
	userId Long required
}

entity WineAgingData {
	minKeep Integer,
	maxKeep Integer
}

entity PinnedWine {

}

relationship OneToOne {
	Cellar{user(login) required} to User
}

relationship ManyToOne {
	Wine{region(regionName) required} to Region,
    Wine{color(colorName) required} to Color,
    Wine{creator(login)} to User,
    Vintage{wine(name) required} to Wine,
	WineInCellar{cellar required} to Cellar,
    WineInCellar{vintage required} to Vintage,
    WineAgingData{color(colorName) required} to Color,
    WineAgingData{region(regionName) required} to Region,
    PinnedWine{wine required} to Wine,
    PinnedWine{user(login) required} to User
}

dto Cellar, WineInCellar, PinnedWine with mapstruct
service Cellar, WineInCellar with serviceClass
search Wine, WineInCellar with elasticsearch
paginate WineInCellar, Wine with infinite-scroll
filter WineInCellar, Wine
